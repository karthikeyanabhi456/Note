{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/account-create/account-create.component.ts","./src/app/account-create/account-create.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/feedback/feedback.component.ts","./src/app/feedback/feedback.component.html","./src/app/feedback/feedback.service.ts","./src/app/info/info.component.ts","./src/app/info/info.component.html","./src/app/info/info.service.ts","./src/app/master.service.ts","./src/app/note/add/add.component.ts","./src/app/note/add/add.component.html","./src/app/note/list/list.component.ts","./src/app/note/list/list.component.html","./src/app/note/note.service.ts","./src/app/note/view/view.component.ts","./src/app/note/view/view.component.html","./src/app/secret.service.ts","./src/app/signin/signin.component.ts","./src/app/signin/signin.component.html","./src/app/test/test.component.ts","./src/app/test/test.component.html","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n//import { ToastrService } from 'ngx-toastr';\n//private toastrService : ToastrService\n\nimport { SecretService } from '../secret.service';\n\n@Component({\n  selector: 'app-account-create',\n  templateUrl: './account-create.component.html',\n  styleUrls: ['./account-create.component.css']\n})\nexport class AccountCreateComponent implements OnInit\n{\n    formGroup : FormGroup;\n\n    secret : any={};\n\n    response : any={};\n    //new() is used because it is newly created from client-side by instantiating using new() to go for/to the server-side\n    //new is not used because the object from the server-side directly binds to the property\n    \n    constructor(private formBuilder : FormBuilder, private secretService : SecretService)\n    {\n        this.formGroup = this.formBuilder.group({\n            'unForm' : [null, Validators.required],\n            'firstNameForm' : [null],//, Validators.required],\n            'lastNameForm' : [null],//, Validators.required],\n            'genderForm' : [null],\n            'DobForm' : [null],\n            'mobileForm' : [null],\n            'pwdForm' : [null, Validators.required],\n        })\n    }\n    \n    ngOnInit()\n    {\n        console.log('New page');\n    }\n    \n    create()\n    {\n        console.log('create');\n        this.secret.un = this.formGroup.value.unForm;\n        this.secret.firstName = this.formGroup.value.firstNameForm;\n        this.secret.lastName = this.formGroup.value.lastNameForm;\n        this.secret.gender = this.formGroup.value.genderForm;\n        this.secret.dob = this.formGroup.value.DobForm;\n        this.secret.mobile = this.formGroup.value.mobileForm;\n        this.secret.pwd = this.formGroup.value.pwdForm;\n        \n        console.log(this.secret);\n        this.secretService.update(this.secret).subscribe( data => {\n            console.log(data);\n            this.response = data;\n            if(this.response.code == 200)\n                //this.toastrService.show('success', 'Account Created'); \n                alert('Account created');\n            else if(this.response.code == 0 || this.response.code == 2)\n                //this.toastrService.show('error', 'Invalid');\n                alert('Invalid');\n            else if(this.response.code == 3)\n                //this.toastrService.show('error', 'User name taken');\n                alert('User name taken');\n            else\n                alert('error');\n            });\n    }\n}","<h2>Create Account</h2>\n\n<form [formGroup] = \"formGroup\">\n<label>Username : </label>\n<input type = \"text\" placeholder = \"Username\" formControlName = \"unForm\" name = \"un\" id = \"un\">\n<div *ngIf = \"formGroup.controls['unForm'].invalid && formGroup.controls['unForm'].touched\">User name required</div>\n<br><br>\n\n<label>First name : </label>\n<input type = \"text\" formControlName = \"firstNameForm\" placeholder = \"First name\" name = \"firstName\" id = \"firstName\">\n<div *ngIf = \"formGroup.controls['firstNameForm'].invalid && formGroup.controls['firstNameForm'].touched\">First name required</div>\n<br><br>\n\n<label>Last name : </label>\n<input type = \"text\" formControlName = \"lastNameForm\" placeholder = \"Last name\" name = \"lastName\" id = \"lastName\">\n<div *ngIf = \"formGroup.controls['lastNameForm'].invalid && formGroup.controls['lastNameForm'].touched\">Last name required</div>\n<br><br>\n\n<label>Gender : </label>\n<input type = \"radio\" value = \"MALE\" formControlName = \"genderForm\" name = \"genderForm\" id = \"maleGenderForm\">Male <!-- Name and form control name must be same only for radio buttons -->\n<input type = \"radio\" value = \"FEMALE\" formControlName = \"genderForm\" name = \"genderForm\" id = \"femaleGenderForm\">Female\n<br><br>\n\n<label>Date Of Birth : </label>\n<input type = \"date\" formControlName = \"DobForm\" placeholder = \"DOB\" name = \"dob\" id = \"dob\">\n<br><br>\n\n<label>Mobile : </label>\n<input type = \"number\" formControlName = \"mobileForm\" placeholder = \"Mobile\" name = \"mobile\" id = \"mobile\">\n<br><br>\n\n<label>Enter Secret Password : </label>\n<input type = \"password\" formControlName = pwdForm placeholder = \"Pwd\" name = \"pwd\" id = \"pwd\">\n<div *ngIf = \"formGroup.controls['pwdForm'].invalid && formGroup.controls['pwdForm'].touched\">Password required</div>\n<br><br>\n</form>\n\n<button (click) = \"create()\" [disabled] = \"!formGroup.valid\">Create</button>\n&nbsp;&nbsp;\n<button routerLink = \"/signin\">Home</button>\n\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SigninComponent } from './signin/signin.component';\nimport { AccountCreateComponent } from './account-create/account-create.component'; //to get in to the folder use dot slash (./) to come out of the file, type folder name and use slash to type file name (./folder name/file name)\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { ListComponent } from './note/list/list.component';\nimport { AddComponent } from './note/add/add.component';\nimport { ViewComponent } from './note/view/view.component';\nimport { InfoComponent } from './info/info.component';\nimport { FeedbackComponent } from './feedback/feedback.component';\nimport { TestComponent } from './test/test.component';\n\n\nconst routes: Routes =\n[\n    { path : 'signin', component : SigninComponent },\n    { path : 'create-account', component : AccountCreateComponent  },\n    { path : 'welcome/:id', component : WelcomeComponent },\n    { path : 'list/:id', component : ListComponent },\n    { path : 'add/:id', component : AddComponent },\n    { path : 'view/:id', component : ViewComponent },\n    { path : 'info', component : InfoComponent },\n    { path : 'feedback', component : FeedbackComponent },\n    { path : 'test', component : TestComponent },\n    { path : '', redirectTo: 'test', pathMatch: 'full' } //for testing purposes\n    //{ path : '', redirectTo: 'signin', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\nexport const RoutingComponents = [TestComponent, SigninComponent, AccountCreateComponent, WelcomeComponent, ListComponent, AddComponent, ViewComponent, InfoComponent, FeedbackComponent];","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'secret';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\n//import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n//CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n//import { MatFormFieldModule } from '@angular/material/form-field';\n//import { CommonModule } from '@angular/common';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component'; //one dot (.) is used to come out one step out of the file and put slash (/) to declare the file name\nimport { RoutingComponents } from './app-routing.module';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n//import { AngularEditorModule } from '@kolkov/angular-editor';\n//import { ToastrModule } from 'ngx-toastr';\n\nimport { SecretService } from './secret.service';\nimport { NoteService } from './note/note.service';\nimport { InfoService } from './info/info.service';\nimport { FeedbackService } from './feedback/feedback.service';\nimport { MasterService } from './master.service';\nimport { FeedbackComponent } from './feedback/feedback.component';\nimport { ListComponent } from './note/list/list.component';\nimport { AddComponent } from './note/add/add.component';\nimport { ViewComponent } from './note/view/view.component';\n\n@NgModule({\ndeclarations: [\n  AppComponent,\n  RoutingComponents,\n  ListComponent,\n  AddComponent,\n  ViewComponent,\n  FeedbackComponent //app and routing components and additional components are to be declared here\n],\nimports: [\n  BrowserModule,\n  //BrowserAnimationsModule,\n  //MatFormFieldModule,\n  //MatInputModule,\n  //CommonModule,\n  AppRoutingModule,\n  FormsModule,\n  ReactiveFormsModule,\n  HttpClientModule,\n  //AngularEditorModule,\n  //ToastrModule.forRoot(); //Additional modules imported via net are to be added in imports\n],\n/*exports: [\n          BrowserModule,\n          BrowserAnimationsModule,\n          MatFormFieldModule,\n          CommonModule,\n          AppRoutingModule,\n          FormsModule,\n          ReactiveFormsModule,\n          HttpClientModule,\n          //AngularEditorModule,\n          //ToastrModule.forRoot(); //Additional modules imported via net are to be added in imports\n        ],*/\nproviders: [SecretService, NoteService, InfoService, FeedbackService, MasterService], //services are to be declared here\nbootstrap: [AppComponent]\n/*schemas:\n    [ CUSTOM_ELEMENTS_SCHEMA,\n     ]*/\n})\nexport class AppModule { } //client //Additional modules are imported here //modules combine here to run","import { Component, OnInit } from '@angular/core';\n\nimport { FeedbackService } from './feedback.service';\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.css']\n})\nexport class FeedbackComponent implements OnInit\n{\n    response : any={};\n\n    resultSetList : any=[];\n\n  constructor(private feedbackService : FeedbackService)\n  {\n      \n  }\n\n  ngOnInit()\n  {\n      console.log('New page');\n      \n      this.feedbackService.feedbackUn().subscribe( data => {\n          console.log(data);\n          this.response = data;\n          if(this.response.code == 200)\n              this.resultSetList = this.response.content;\n          else\n              alert('error');\n          });\n  }\n}\n","<h2>Feedback</h2>\r\n<br>\r\n\r\n<table border = 1> <!-- \"1\" can also be used -->\r\n<tr>\r\n<th>User name</th>\r\n<th>Feedback</th>\r\n</tr>\r\n<tr *ngFor = \"let resultSet of resultSetList\">\r\n<td>{{resultSet[0]}}</td>\r\n<td>{{resultSet[1]}}</td>\r\n</tr>\r\n</table>","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nconst httpOptions =\r\n{\r\n        'responseType' : 'blob' as 'json'\r\n};\r\n\r\n@Injectable()\r\nexport class FeedbackService\r\n{\r\n    constructor(private http : HttpClient)\r\n    {\r\n        \r\n    }\r\n    \r\n    private url = '/api/secret/feedback';\r\n    \r\n    public feedbackUn()\r\n    {\r\n        return this.http.get<any>(this.url+'/unsfeedback');\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\nimport { InfoService } from './info.service';\n//import { ToastrService } from 'ngx-toastr';\n//import { saveAs } from 'file-saver';\n//private toastrService : ToastrService\n\n@Component({\n  selector: 'app-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.css']\n})\nexport class InfoComponent implements OnInit\n{\n    \n    constructor(private infoService : InfoService)\n    {\n        \n    }\n    \n    id : any;\n    \n    city : any={};\n    course : any={};\n    role : any={};\n    \n    cityList : any=[];\n    idList : any=[];\n    courseList : any=[];\n    roleList : any=[];\n    \n    response : any={};\n\n    ngOnInit()\n    {\n        console.log('New page');\n        this.getCityList(); //list objects are suffixed with List for readability\n        this.getCourseList();\n        this.getRoleList(); //asynchronous group loading //loads multiple promises\n    }\n    \n    //City\n    getCityList()\n    {\n        console.log('getCityList');\n        \n        this.infoService.getAllCityList().subscribe( data => {\n            console.log(data);\n            this.response = data;\n            if(this.response.code == 200)\n            {\n                this.cityList = this.response.content;\n                if(this.cityList == null)\n                this.cityList = [];\n             }\n             else\n                 alert('error');\n             });\n    }\n    \n    addCity()\n    {\n        console.log('addCity');\n        console.log(this.city);\n        this.cityList.push(this.city);\n        console.log(this.cityList); //\n        //this.city.name = null;\n    }\n    \n    createCityList()\n    {\n        console.log('createCityList');\n        \n        console.log(this.cityList);\n        this.infoService.updateCityList(this.cityList).subscribe( data => {\n            console.log(data);\n            this.response = data;\n            if(this.response.code == 200)\n            {\n              //this.toastrService.show('success', 'Saved');\n                alert('Saved');\n                this.getCityList(); //ngOnInit() should not be called as it should be called only once\n            }\n            else\n                alert('error');\n        });\n    }\n    \n    deleteCity(index, id) //index name should be used for readability //index should be first used for readability\n    {\n        console.log('deleteCity');\n        console.log(index);\n        console.log(id);\n        this.cityList.splice(index, 1); //1 check\n        this.idList.push(id);\n    }\n    \n    deleteCityList()\n    {\n        console.log('deleteCityList');\n        \n        console.log(this.idList);\n        this.infoService.deleteCityList(this.idList).subscribe( data => {\n            console.log(data);\n            this.response = data;\n            if(this.response.code == 200)\n            {\n                //this.toastrService.show('success', 'Saved');\n                alert('Deleted successfully');\n                this.getCityList(); //ngOnInit() should not be called as it should be called only once\n            }\n            else\n                alert('error');\n        });\n    }\n    \n    //Course\n    getCourseList()\n    {\n        console.log('getCourseList');\n        \n        this.infoService.getAllCourseList().subscribe( data => {\n            console.log(data);\n            this.response = data;\n            if(this.response.code == 200)\n                this.courseList = this.response.content;\n            else\n                alert('error');\n            });\n    }\n    \n    createCourse()\n    {\n        console.log('createCourse');\n        \n        console.log(this.course);\n        this.infoService.updateCourse(this.course).subscribe( data => {\n            console.log(data);\n            this.response = data;\n            if(this.response.code == 200)\n            {\n                //this.toastrService.show('success', 'Saved');\n                alert('Saved');\n                this.getCourseList();\n            }\n            else\n                alert('error');\n        });\n    }\n    \n    deleteCourse(id) //(id : number) or (id : any) can also be used\n    {\n        console.log('deleteCourse');\n        \n        console.log(id);\n        this.infoService.deleteCourse(id).subscribe( data => {\n            console.log(data);\n            this.response = data;\n            if(this.response.code == 200)\n            {\n                //this.toastrService.show('success', 'Saved');\n                alert('Deleted successfully');\n                this.getCourseList();\n            }\n            else\n                alert('error');\n        });\n    }\n    \n    //Role\n    getRoleList()\n    {\n        console.log('getCourseList');\n        \n        this.infoService.getAllRoleList().subscribe( data => {\n            console.log(data);\n            this.response = data;\n            if(this.response.code == 200)\n                this.roleList = this.response.content;\n            else\n                alert('error');\n            });\n    }\n    \n    createRole()\n    {\n        console.log('createRole');\n        \n        console.log(this.role);\n        this.infoService.updateRole(this.role).subscribe( data => {\n            console.log(data);\n            this.response = data;\n            if(this.response.code == 200)\n            {\n                //this.toastrService.show('success', 'Saved');\n                alert('Saved');\n                this.getRoleList();\n            }\n            else\n                alert('error');\n        });\n    }\n    \n    deleteRole(id)\n    {\n        console.log('deleteRole');\n        \n        console.log(id);\n        this.infoService.deleteRole(id).subscribe( data => {\n            console.log(data);\n            this.response = data;\n            if(this.response.code == 200)\n            {\n                //this.toastrService.show('success', 'Saved');\n                alert('Deleted successfully');\n                this.getRoleList();\n            }\n            else\n                alert('error');\n        });\n    }\n}","<h2>Info</h2>\r\n\r\n<!-- City -->\r\n<h2>City</h2>\r\n<form>\r\n<label>Name : </label>\r\n<input type = \"text\" [(ngModel)] = \"city.name\" placeholder = \"Name\" name = \"name\" id = \"name\">\r\n<br><br>\r\n</form>\r\n\r\n<button (click) = \"addCity()\">Add</button>\r\n&nbsp;\r\n<button (click) = \"createCityList()\">Create</button>\r\n&nbsp;\r\n<button (click) = \"deleteCityList()\">Delete</button>\r\n<br><br>\r\n\r\n<table border = 1>\r\n<tr>\r\n<th>Index</th>\r\n<th>Name</th>\r\n<th>Delete</th>\r\n</tr>\r\n<tr *ngFor = \"let city of cityList; index as i\">\r\n<td>{{i+1}}</td>\r\n<td>{{city.name}}</td>\r\n<td><button (click) = \"deleteCity(index, city.id)\">Delete</button></td>\r\n</tr>\r\n</table>\r\n\r\n<!-- Course -->\r\n<h2>Course</h2>\r\n<form>\r\n<label>Name : </label>\r\n<input type = \"text\" [(ngModel)] = \"course.name\" placeholder = \"Course\" name = \"name\" id = \"name\">\r\n<br><br>\r\n<label>Fee : </label>\r\n<input type = \"text\" [(ngModel)] = \"course.fee\" placeholder = \"Fee\" name = \"fee\" id = \"fee\">\r\n<br><br>\r\n</form>\r\n\r\n<button (click) = \"createCourse()\">Create</button>\r\n<br><br>\r\n\r\n<table border = 1>\r\n<tr>\r\n<th>Index</th>\r\n<th>Name</th>\r\n<th>Fee</th>\r\n<th>Delete</th>\r\n</tr>\r\n<tr *ngFor = \"let course of courseList; index as i\">\r\n<td>{{i+1}}</td>\r\n<td>{{course.name}}</td>\r\n<td>{{course.fee}}</td>\r\n<td><button (click) = \"deleteCourse(course.id)\">Delete</button></td>\r\n</tr>\r\n</table>\r\n\r\n<!-- Role -->\r\n<h2>Role</h2>\r\n<form>\r\n<label>Name : </label>\r\n<input type = \"text\" [(ngModel)] = \"role.name\" placeholder = \"Role\" name = \"name\" id = \"name\">\r\n<br><br>\r\n<label>Create : </label>\r\n<input type = \"text\" [(ngModel)] = \"role.create\" placeholder = \"Create\" name = \"create\" id = \"create\">\r\n<br><br>\r\n</form>\r\n\r\n<button (click) = \"createRole()\">Create</button>\r\n<br><br>\r\n\r\n<table border = 1>\r\n<tr>\r\n<th>Index</th>\r\n<th>Name</th>\r\n<th>Create</th>\r\n<th>Delete</th>\r\n</tr>\r\n<tr *ngFor = \"let role of roleList; index as i\">\r\n<td>{{i+1}}</td>\r\n<td>{{role.name}}</td>\r\n<td>{{role.create}}</td>\r\n<td><button (click) = \"deleteRole(role.id)\">Delete</button></td>\r\n</tr>\r\n</table>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nconst httpOptions =\n{\n        'responseType' : 'blob' as 'json'\n};\n\n@Injectable()\nexport class InfoService //unlike server-side the client-side structure can be of any type\n{\n    constructor(private http : HttpClient)\n    {\n        \n    }\n    \n    private url = '/api/secret';\n    \n    //City\n    public getAllCityList()\n    {\n        return this.http.get<any>(this.url+'/city/get/all');\n    }\n    \n    public updateCityList(cities)\n    {\n        return this.http.put<any>(this.url+'/city/updates', cities);\n    }\n    \n    public deleteCityList(ids)\n    {\n        return this.http.delete<any>(this.url+'/city/deletes', ids);\n    }\n    \n    //Course\n    public getAllCourseList()\n    {\n        return this.http.get<any>(this.url+'/course/get/all');\n    }\n    \n    public updateCourse(course)\n    {\n        return this.http.put<any>(this.url+'/course/update', course);\n    }\n    \n    public deleteCourse(id)\n    {\n        return this.http.delete<any>(this.url+'/course/delete/'+id);\n    }\n    \n    //Role\n    public getAllRoleList()\n    {\n        return this.http.get<any>(this.url+'/role/get/all');\n    }\n    \n    public updateRole(role)\n    {\n        return this.http.put<any>(this.url+'/role/update', role);\n    }\n    \n    public deleteRole(id)\n    {\n        return this.http.delete<any>(this.url+'/role/delete/'+id);\n    }\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n//const httpOptions = { headers : new HttpHeaders({'ContentType' : 'application/json'}) } //only for data\n\nconst httpOptions =\n{\n        'responseType' : 'blob' as 'json'\n}; //for file downloads\n\n@Injectable()\nexport class MasterService //application commons are declared here\n{\n    /*constructor(private http : HttpClient) //constructor method is recommended to declare in this way instead of constructor() {} as it looks like a calling method and for readability\n    {\n        \n    }*/\n    \n    public date()\n    {\n        return \"dd-MM-yyyy\";\n    }\n    \n    //currency\n    \n    //\n    \n    constructPagination(paginationRequest)\n    {\n        console.log('constructPagination');\n        /*this.paginationRequest.page = 0;\n        this.paginationRequest.size = 5;\n        this.paginationRequest.properties = 'msg'; //sort field\n        this.paginationRequest.direction = 'ASC';\n        this.paginationRequest.searchKey = '';*/\n        paginationRequest.page = 0;\n        paginationRequest.size = 5;\n        paginationRequest.properties = 'msg'; //sort field\n        paginationRequest.direction = 'ASC';\n        paginationRequest.searchKey = '';\n        return paginationRequest;\n    }\n    \n    /*pageIndex(index)\n    {\n        return ((this.paginationRequest.page*this.paginationRequest.size)+(index+1));\n    }*/\n    \n    displayFn( option?: any ): String | undefined {\n      return option ? option.name : undefined;\n    }\n}","import { Component, OnInit } from '@angular/core';\n\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { SecretService } from '../../secret.service'; //use two double dot slash (../../) to come out from two folders and put slash to declare the file name\n//import { ToastrService } from 'ngx-toastr';\n//import { saveAs } from 'file-saver';\n//private toastrService : ToastrService\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit\n{\n    \n    constructor(private router : Router, private activatedRoute : ActivatedRoute, private secretService : SecretService)\n    {\n        \n    }\n    \n    id : any;\n    \n    secret : any={};\n    notes : any=[]; //\n    note : any={}; //\n    \n    response : any={};\n\n    ngOnInit()\n    {\n        console.log('New page');\n        this.id = +this.activatedRoute.snapshot.paramMap.get('id');\n        \n        console.log(this.id);\n        this.secretService.getOne(this.id).subscribe( data => {\n            console.log(data);\n            this.response = data;\n            if(this.response.code == 200)\n            {\n                this.secret = this.response.content;\n                this.notes = this.secret.notes;\n            }\n            else\n                alert('error');\n            });\n    }\n    \n    save()\n    {   \n        console.log('save');\n        this.notes.add(this.note);\n        this.secret.notes = this.notes;\n        \n        console.log(this.secret);\n        this.secretService.update(this.secret).subscribe( data => {\n            console.log(data);\n            this.response = data;\n            if(this.response.code == 200)\n            {\n                //this.toastrService.show('success', 'Saved');\n                alert('Saved');\n                this.router.navigate(['/list']);\n            }\n            else\n                alert('error');\n            });\n        /*this.noteService.update(this.id, this.note).subscribe( data => {\n            console.log(data);\n            this.response = data;\n            if(this.response.code == 200)\n            {\n                //this.toastrService.show('success', 'Saved');\n                alert('Saved');\n                this.router.navigate(['/list']);\n            }\n            else\n                alert('error');\n        });*/\n    }\n}","<h2>Create</h2>\r\n\r\n<form>\r\n<label>Secret</label>\r\n<br>\r\n<textarea [(ngModel)] = \"note.msg\" placeholder = \"Note\" name = \"msg\" id = \"msg\"></textarea>\r\n<br>\r\n</form>\r\n\r\n<button (click) = \"save()\">Save</button>","import { Component, OnInit } from '@angular/core';\n\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { SecretService } from '../../secret.service'; //use two double dot slash (../../) to come out from two folders and put slash to declare the file name\nimport { NoteService } from '../note.service';\nimport { MasterService } from '../../master.service';\n//import { ToastrService } from 'ngx-toastr';\n//import { saveAs } from 'file-saver';\n//private toastrService : ToastrService\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit\n{\n    \n    constructor(private router : Router, private activatedRoute : ActivatedRoute, private noteService : NoteService, private secretService : SecretService, private masterService : MasterService)\n    {\n        \n    }\n    \n    id : any;\n    \n    noteList : any=[]; //list is used for readability\n    \n    sizeList : any=[] = [5, 10, 15, 20]; //number[] can be used instead of any=[]\n    pageList : any=[];\n    paginationRequest : any={};\n    paginationResponse : any={};\n    secret : any={};\n    response : any={};\n\n    ngOnInit()\n    {\n        console.log('New page');\n        this.id = +this.activatedRoute.snapshot.paramMap.get('id');\n        this.masterService.constructPagination(this.paginationRequest);\n        this.getList();\n    }\n    \n    pageIndex(index)\n    {\n        return ((this.paginationRequest.page*this.paginationRequest.size)+(index+1));\n    }\n    \n    getList()\n    {\n        console.log('getList');\n        \n        console.log(this.id);\n        console.log(this.paginationRequest);\n        this.noteService.pagination(this.id, this.paginationRequest).subscribe( data => {\n            console.log(data);\n            this.response = data;\n            if(this.response.code == 200)\n            {\n                this.paginationResponse = this.response.content;\n                this.noteList = this.paginationResponse.content;\n                if(this.noteList == null)\n                    this.noteList = []; //empty array has to be declared only then items can be pushed\n                for(let i=1;i<=this.paginationResponse.totalPages;i++)\n                {\n                    this.pageList.push(i);\n                }\n            }\n            else\n                alert('error');\n            });\n    }\n    \n    /*keyStroke(event)\n    {\n       //event.target is used to detect the key stroked\n       this.paginationRequest.searchKey = event.target.value; //used to return the value in the field\n       this.getList();\n    }*/\n    \n    applyFilter(filterValue)\n    {\n       this.paginationRequest.searchKey = filterValue;\n       this.getList();\n    }\n    \n    sort()\n    {\n        if(this.paginationRequest.direction == 'ASC')\n            this.paginationRequest.direction = 'DESC';\n        else\n            this.paginationRequest.direction = 'ASC';\n        \n        this.getList();\n        return;\n    }\n    \n    create()\n    {\n        console.log('create');\n        this.router.navigate(['/add', this.id]);\n    }\n    \n    view(id)\n    {\n        console.log('view');\n        console.log(id); //from internal ui input\n        this.router.navigate(['/view', id])\n    }\n    \n    delete(id)\n    {\n        console.log('delete');\n        \n        console.log(id);\n        this.secretService.update(this.secret).subscribe( data => {\n            console.log(data);\n            this.response = data;\n            if(this.response.code == 200)\n                //this.toastrService.show('success', 'Saved successfully');\n               alert('Deleted successfully');\n            else\n                alert('error');\n            });\n            this.getList();\n    }\n}\n/*var body =\n{\n    ...this.secretDto,\n    feedbackDto : \n        {\n            id : this.secretDto.feedbackDto.id,\n            msg : this.msg\n        }\n    noteDtos :\n        [\n            {\n                \"msg\" : this.msg\n            }\n        ]\n};*/","<h2>Secret</h2>\r\n\r\n<button (click) = \"create()\">Create</button>\r\n<br><br>\r\n\r\n<h2>Total secrets : {{paginationResponse.totalElements}}</h2>\r\n<br>\r\n\r\n<!-- <h2>Search : </h2>\r\n<input type = \"text\" (keyup) = \"applyFilter($event.target.value)\" placeholder = \"Search\" name = \"search\" id = \"search\">\r\n<br><br> --> <!-- applyFilter($event) can also be used -->\r\n\r\n<h2>Search : </h2>\r\n<input #search (keyup) = \"applyFilter(search.value)\" placeholder = \"Search\" name = \"search\" id = \"search\"> <!-- recommended --> <!-- (keyup)=\"keyStroke($event)\" can also be used --> <!-- (keyup.enter) allows event only to occur after enter key is pressed and (blur) = \"applyFilter(search.value)\" is used along with (keyup.enter) in case the user made next event without pressing the enter key -->\r\n<br><br>\r\n\r\n<table border = 1>\r\n<tr>\r\n<th>Index</th>\r\n<th>Secret<button (click) = \"sort()\">Sort : {{paginationRequest.direction}}</button></th>\r\n<th>View</th>\r\n<th>Delete</th>\r\n</tr>\r\n<tr *ngFor = \"let note of noteList; index as i\">\r\n<td>{{pageIndex(i)}}</td>\r\n<td>{{note.msg}}</td>\r\n<td><button (click) = \"view(note.id)\">View</button></td>\r\n<td><button (click) = \"delete(note.id)\">Delete</button></td>\r\n</tr>\r\n</table>\r\n<br><br>\r\n\r\n<select>\r\n<option *ngFor = \"let page of pageList\" (onchange) = \"pagination()\">{{page}}</option>\r\n</select>\r\n&nbsp;&nbsp;\r\n<select>\r\n<option *ngFor = \"let size of sizeList\" (onchange) = \"pagination()\">{{size}}</option>\r\n</select>","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nconst httpOptions =\r\n{\r\n        'responseType' : 'blob' as 'json'\r\n};\r\n\r\n\r\n@Injectable()\r\nexport class NoteService\r\n{\r\n    constructor(private http : HttpClient)\r\n    {\r\n        \r\n    }\r\n    \r\n    private url = '/api/secret/note';\r\n    \r\n    public getOne(id)\r\n    {\r\n        return this.http.get<any>(this.url+'/get/'+id);\r\n    }\r\n    \r\n    /*public update(id, note) //(id : any, note : any) can also be used\r\n    {\r\n        return this.http.post<any>(this.url+'/update/'+id, note);\r\n    }*/\r\n    \r\n    /*public delete(id)\r\n    {\r\n        return this.http.delete<any>(this.url+'/delete/'+id);\r\n    }*/\r\n    \r\n    public pagination(id, paginationRequest)\r\n    {\r\n        return this.http.post<any>(this.url+'/pagination/'+id, paginationRequest);\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\n\nimport { NoteService } from '../note.service';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit\n{\n    \n    constructor(private activatedRoute : ActivatedRoute, private noteService : NoteService)\n    {\n        \n    }\n    \n    id : number;\n    \n    note : any={};\n    \n    response : any;\n\n    ngOnInit()\n    {\n        console.log('New page');\n        this.id = +this.activatedRoute.snapshot.paramMap.get('id');\n        \n        console.log(this.id);\n        this.noteService.getOne(this.id).subscribe( data => {\n            console.log(data);\n            this.response = data;\n            if(this.response.code == 200)\n                this.note = this.response.content;\n            else\n                alert('error');\n            });\n    }\n}","<h2>View</h2>\r\n\r\n<h3>Message : {{note.msg}}</h3>\r\n\r\n<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n//const httpOptions = { headers : new HttpHeaders({'ContentType' : 'application/json'}) } //only for data\n\nconst httpOptions =\n{\n        'responseType' : 'blob' as 'json'\n}; //for file downloads\n\n@Injectable()\nexport class SecretService\n{\n    constructor(private http : HttpClient) //constructor method is recommended to declare in this way instead of constructor() {} as it looks like a calling method and for readability\n    {\n        \n    }\n    \n    private url = '/api/secret';\n    \n    public getOne(id) //parameter id full name is not needed as it is defined by its class or calling method\n    {\n        return this.http.get<any>(this.url+'/get/'+id); //<> is bind property i.e.assignable type\n    }\n    \n    /*public getAll()\n    {\n        return this.http.get<any>(this.url+'/get/all');\n    }*/\n    \n    /*public save(secretDTO)\n    {\n        return this.http.post<any>(this.url+'/save', secretDTO);\n    }*/\n    \n    public update(secret)\n    {\n        return this.http.put<any>(this.url+'/update', secret);\n    }\n    \n    public delete(id)\n    {\n        return this.http.delete<any>(this.url+'/delete/'+id);\n    }\n    \n    public signIn(secret)\n    {\n        return this.http.post<any>(this.url+'/signin',secret);\n    }\n    \n    /*public downloadExcel(id)\n    {\n        return this.http.get<any>(this.url+'/download/excel/'+id, httpOptions);\n    }*/\n    \n    /*public uploadExcel(id, secret)\n    {\n        return this.http.post<any>(this.url+'/upload/excel/'+id, httpOptions);\n    }*/\n    \n    public restart(secret)\n    {\n        return this.http.post<any>(this.url+'/restart', secret);\n    }\n}","import { Component, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router'; //for navigation only\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { SecretService } from '../secret.service';\n//import { ToastrService } from 'ngx-toastr';\n//toastrService : ToastrService\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent //implements OnInit //component.spec.ts is not needed for all components except app.component.spec.ts\n{\n    id : any\n    \n    formGroup : FormGroup;\n    \n    secret : any={}; //private by default //private can also be used\n\n    response : any={}; //any, any={}, any=[] are data types //there should be no spaces in any={} and any=[]\n    //any={} is equivalent to any object and any=[] is equivalent to any list\n\n    preUser : any; //any can be used instead of boolean, number and string \n    //any is equivalent to both any={} and any=[]\n    //even though any can be used any={} for object and any=[] for list is used for readability\n    \n    constructor(private router : Router, private formBuilder : FormBuilder, private secretService : SecretService) //constructor() is first only then ngOnInit()\n    {\n        this.formGroup = this.formBuilder.group({\n            'unForm' : [null, Validators.required],\n            'pwdForm' : [null, Validators.required]\n        }) //client-side validation\n    }\n    \n    ngOnInit() //void data type\n    {\n        console.log('New page');\n        if(localStorage.getItem('user') != null) //'' is used instead of \"\" which also works\n            this.preUser = localStorage.getItem('user');\n        else\n            this.preUser = '';\n    }\n    \n    signin() //returns void by default //signIn() : void expression is also void\n    {\n        console.log('signin'); //internal ui input\n        this.secret.un = this.formGroup.value.unForm;\n        this.secret.pwd = this.formGroup.value.pwdForm;\n        \n        console.log(this.secret);\n        this.secretService.signIn(this.secret).subscribe( data => { \n            console.log(data); //it is good to see the arriving and departing data \n            this.response = data; //in promise not asynchronous\n            if(this.response.code == 200)\n            {\n                this.secret = this.response.content;\n                this.id = this.secret.id; //this.id is recommended as it can be used anywhere\n                //let paramId = this.secret.id;\n                localStorage.setItem('user', this.secret.un);\n                //this.toastrService.show('success','Logged in');\n                this.router.navigate(['/welcome', this.id]);\n            }\n            else if(this.response.code == 2 || this.response.code == 3 || this.response.code == 4)\n                alert('Invalid');\n                //this.toastrService.show('error', 'Invalid');\n            else\n                alert('error');\n        }/*, alert =>\n        {\n            console.log('error') //optional\n        }*/);\n    }\n    \n    info()\n    {\n        console.log('info');\n        this.router.navigate(['/info']);\n    }\n    \n    refresh()\n    {\n        console.log('refresh');\n        this.router.navigateByUrl(this.router.url).then( () => window.location.reload() ); //this.router.url gives current url \n    }\n    \n    restart()\n    {\n        console.log('restart');\n        this.secret.un = this.formGroup.value.unForm;\n        this.secret.pwd = this.formGroup.value.pwdForm;\n        \n        console.log(this.secret);\n        this.secretService.restart(this.secret).subscribe( data => { \n            console.log(data);\n            this.response = data;\n            if(this.response.code == 200)\n            {\n                //this.toastrService.show('success','Restarted');\n                alert('Restarted');\n            }\n            else\n                alert('error');\n        });\n    }\n}\n","<div style=\"text-align:center\">\n\n<h1>Secret</h1> <!-- check form -->\n\n<form [formGroup] = \"formGroup\">\n<label>User name : </label> <!-- <label for = un>Username : </label> -->\n<input type = \"text\" formControlName = \"unForm\" placeholder = \"User name\" name = \"un\" id = \"un\"> <!-- id and name both are used to local storage the previous inputs --><!-- use control+shift+? to comment the selected text -->\n<div *ngIf = \"formGroup.controls['unForm'].invalid && formGroup.controls['unForm'].touched\">User name required</div> <!-- input validation -->\n<br><br>\n\n<label>Password : </label>\n<input type = \"password\" formControlName = \"pwdForm\" placeholder = \"Pwd\" name = \"pwd\" id = \"pwd\"> <!-- names of id and name are final object name as of server-side -->\n<div *ngIf = \"formGroup.controls['pwdForm'].invalid && formGroup.controls['pwdForm'].touched\">Password required</div>\n<br><br>\n</form>\n\n<button (click) = \"signin()\" [disabled] = \"!formGroup.valid\">Sign In</button>\n\n<a routerLink = \"/create-account\">Create Account</a>\n&nbsp;&nbsp;\n<button (click) = \"info()\">Info</button>\n<br><br>\n<a routerLink = \"/feedback\">Feedback</a>\n&nbsp;&nbsp;\n<button (click) = \"refresh()\">Reload (refresh)</button>\n&nbsp;&nbsp;\n<button (click) = \"restart()\">Restart</button>\n<br><br>\n</div>\n\n<!-- <mat-checkbox name=\"insured\">select if yes</mat-checkbox> -->\n\n<div style = \"text-align:left\">\n<h3>Previous user\n<br>\n{{preUser}}</h3>\n</div>\n\n<div style = \"text-align:right\">\n<h3>Developed By\n<br>\nKarthikeyan T</h3>\n</div>\n\n<router-outlet></router-outlet>\n\n<!-- valid - valid field\ninvalid - invalid field\ntouched - field touched\nuntouched - field untouched\ndirty - value in the field changed\npristine : value in the field not changed\nvalue - current value in the input field\nerrors - invalid field properties -->","import { Component, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router';\n\nimport { FormControl } from '@angular/forms';\n\n@Component( {\n    selector: 'app-test',\n    templateUrl: './test.component.html',\n    styleUrls: ['./test.component.css']\n} )\nexport class TestComponent {\n    myControl = new FormControl();\n\n    options: String[] = ['Mary'];\n\n    constructor(private router: Router)\n    {\n\n    }\n\n    ngOnInit()\n    {\n        console.log('New page');\n    }\n\n    /*displayFn( option?: any ): String | undefined {\n        return option ? option.name : undefined;\n    }*/\n}\n","<!-- <form class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <input type=\"text\" placeholder=\"Assignee\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\">\n    <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\n      <mat-option *ngFor=\"let option of options\" [value]=\"option\">\n        {{option}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n</form> -->\n\n<!-- <form class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <input type=\"text\" placeholder=\"Assignee\" aria-label=\"Number\" matInput [formControl]=\"myControl\">\n  </mat-form-field>\n</form> -->\n\n<a routerLink = \"/signin\">Signin</a>\n\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\nimport { Router, ActivatedRoute } from '@angular/router'; //ActivatedRoute can be used to get both paramId and navigation as it contains navigate object\n//import { ToastrService } from 'ngx-toastr';\n//private toastrService : ToastrService\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { SecretService } from '../secret.service'; //single dot (.) is used to come out of the file and another single dot (.) is used to come out of the folder and put slash (/) to declare the file name. i.e. use double dot slash (../) to come out from a folder\n//import { FeedbackDto } from '../FeedbackDto';\nimport { InfoService } from '../info/info.service';\nimport { MasterService } from '../master.service';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit\n{\n\n    id : any;\n\n    secret : any={};\n    //feedbackDto : FeedbackDto;\n    feedback : any={}; //recommended instead of using class\n\n    //msg : any;\n\n    feedbackMsg : any; //binding variable //if the member of the class is not defined the name of the member has to be used with its class name first following its name for readability\n\n    /*courseList : any=[];\n    userCourseList : any=[];*/\n\n    response : any={};\n  \n    constructor(private router : Router, private formBuilder : FormBuilder, private activatedRoute : ActivatedRoute, private secretService : SecretService, private infoService : InfoService, public masterService : MasterService)\n    {\n\t  \n    }\n  \n    ngOnInit()\n    {\n        console.log('New page');\n        //let id = parseInt(this.activatedRoute.snapshot.paramMap.get('id'));\n        //let id = this.activatedRoute.snapshot.params['id'];\n        this.id = +this.activatedRoute.snapshot.paramMap.get('id'); //get('id') is syntax\n        \n        console.log(this.id);\n        this.secretService.getOne(this.id).subscribe( data => {\n\t            console.log(data);\n\t            this.response = data;\n\t            if(this.response.code == 200)\n\t            {\n\t                this.secret = this.response.content;\n\t                this.feedback = this.secret.feedback; //unpacking\n\t                if(this.feedback != null) //likely true conditions are placed in if statement and less likely to else statement\n\t                    this.feedbackMsg = this.feedback.msg;\n\t                else\n\t                {\n\t                    this.feedback = {};\n\t                    this.feedbackMsg = ''; //own objects cannot be created so binding variable is used\n\t                    /*if(this.secret.courses != null)\n\t                        //this.userCourseList = [];//this.secret.courses;\n\t                    else\n\t                        this.userCourseList = [];*/   \n\t                }\n\t            }\n\t            else\n\t                alert('error');\n\t            });\n\t    /*this.infoService.getAllCourseList().subscribe( data => { //page loading //synchronous lazy loading //loads promise after promise\n                console.log(data);\n                this.response = data;\n                if(this.response.code == 200)\n                    this.courseList = this.response.content;\n                else\n                    alert('error');\n\t            });*/\n    }\n    \n    goToSecret()\n    {\n        console.log('goToSecret');\n        this.router.navigate(['/list', this.id]);\n    }\n    \n    /*addCourse(index, course)\n    {\n        console.log('addCourse');\n        console.log(index)\n        console.log(course);\n        this.userCourseList.add(course);\n        this.courseList.splice(index, 1);\n    }\n    \n    removeCourse(index, course)\n    {\n        console.log('removeCourse');\n        console.log(index)\n        console.log(course);\n        this.courseList.add(course);\n        this.userCourseList.splice(index, 1);\n    }*/\n    \n    downloadExcel()\n    {\n        console.log('downloadExcel');\n        \n        console.log(this.id);\n        /*this.secretService.downloadExcel(this.id).subscribe( (downloaddata : ArrayBuffer) => {\n            var file = new Blob([downloaddata],\n            {type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' \n            });\n            saveAs(file,\"Secret\"+\".xlsx\");\n            console.log(data);\n            this.response = data;\n            if(this.response.code == 200)\n                alert('Downloaded successfully');\n                //this.toastrService.show('success','Downloaded successfully');\n            else\n                alert('error');\n            });*/\n    }\n    \n    downloadPdf()\n    {\n        console.log('downloadPdf');\n        \n        console.log(this.id);\n        /*this.secretService.downloadPdf(this.id).subscribe( (downloaddata : ArrayBuffer) => {\n            var file = new Blob([downloaddata],\n            {type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' \n            });\n            saveAs(file,\"Secret\"+\".xlsx\");\n            console.log(data);\n            this.response = data;\n            if(this.response.code == 200)\n                alert('Downloaded successfully');\n                //this.toastrService.show('success','Downloaded successfully');\n            else\n                alert('error');\n            });*/\n    }\n  \n    submit()\n    {\n        console.log('submit');\n        console.log(this.feedbackMsg);\n        this.feedback.msg = this.feedbackMsg;\n        this.secret.feedback = this.feedback;\n        //this.secret.courses = this.userCourseList;\n        console.log(this.secret);\n        this.secretService.update(this.secret).subscribe( data => {\n            console.log(data);\n            this.response = data;\n            if(this.response.code == 200)\n                //this.toastrService.show('success', 'Thank You');\n                alert('Thank You');\n            else\n                alert('error');\n            });\n    }\n    \n    delAcc() //deleteAccount //keep minimum variable or method name length\n    {\n            console.log('delAcc');\n            \n            console.log(this.id);\n            this.secretService.delete(this.id).subscribe( data => {\n                console.log(data);\n                this.response = data;\n                if(this.response.code == 200)\n                {\n                    //this.toastrService.show('success', 'Account deleted successfully');\n                    alert('Account deleted successfully');\n                    this.router.navigate(['/signin']);\n                }\n                else\n                    alert('error');\n                });\n    }\n}","<h1> Welcome {{secret.firstName}}</h1>\n<br>\n\n<h3>Full name : {{secret.firstName}} {{secret.lastName}}</h3>\n\n<div *ngIf = \"secret.gender\"> <!-- \"secretDTO.gender != null\" also works -->\n<h3>Gender : {{secret.gender=='MALE'?'Male':'Female'}}</h3> <!-- use '' instead of \"\" for strings --><!-- \"\" also works --><!-- it is recommended not to use spaces for ternary operator -->\n</div>\n\n<h3>Account created : {{secret.dateOfCreation | date: masterService.date()}}</h3>\n\n<div *ngIf = \"secret.mobile != null\"> <!-- *ngIf returns boolean value 0 or 1 --> <!-- ngIf takes integer 0 as boolean 0 so use != null only for integers --> \n<h3>Mobile : {{secret.mobile}}</h3>\n</div>\n<br>\n\n<button (click) = \"goToSecret()\">Secrets</button>\n<br><br>\n\n<button (click) = \"downloadExcel()\">Download Excel</button>\n&nbsp;\n<button (click) = \"downloadPdf()\">Download Pdf</button>\n<!-- <input type = \"file\" (change) = \"fileEvent($event)\"> -->\n<br><br>\n\n<!-- <h3>Course</h3>\n<select>\n<option *ngFor = \"let course of courseList; index as i\" (onSelect) = \"addCourse(i, course)\">{{course.name}}</option>\n</select>\n<br><br>\n\n<table border = 1>\n<tr>\n<th>Index</th>\n<th>Course</th>\n<th>Delete</th>\n</tr>\n<tr *ngFor = \"let course of userCourseList; index as i\">\n<td>{{i+1}}</td>\n<td>{{course.name}}</td>\n<td>{{course.fee}}</td>\n<td><button (click) = \"removeCourse(i, course)\">Delete</button></td>\n</tr>\n</table>\n<br><br> -->\n\n<form>\n<label>Hey, {{secret.firstName}} enter your valuable feedback letter</label>\n<br>\n<!-- <angular-editor class =\"angular-editor-custom\" [(ngModel)]=\"feedbackMsg\" name=\"feedbackMsg\"></angular-editor> -->\n<textarea [(ngModel)] = \"feedbackMsg\" placeholder = \"Feedback\" name = \"feedbackMsg\" id = \"feedbackMsg\"></textarea> <!-- textarea name = \"feedbackMsg\" can also be used -->\n<br>\n</form>\n<button (click) = \"submit()\">Submit</button> <!-- use submit() for forms -->\n<br><br>\n\n<button (click) = \"delAcc()\">Delete Account</button>\n<br><br><br>\n\n<button routerLink = \"/signin\">Sign Out</button>\n\n<router-outlet></router-outlet>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}